name: Seeker
# Controls when the workflow will run
on:
# Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, master, develop, stage, release ]
  pull_request:
    branches: [ main, master, develop, stage, release ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      checks: write
      contents: write
      deployments: write
      id-token: write
      issues: write
      discussions: write
      packages: write
      repository-projects: write
      security-events: write
      statuses: write
    env:
      SEEKER_SERVER_URL: ${{ vars.SEEKER_SERVER_URL }}
      SEEKER_PROJECT_KEY: ${{ vars.SEEKER_PROJECT_KEY }}
      SEEKER_SCAN_REQUIRED: ${{vars.SEEKER_SCAN_REQUIRED }}
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      
      - name: Cache Maven packages
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        working-directory: ./java-api
        run: mvn -DskipTests=true package

      - name: Release
        uses: djnicholson/release-action@v2.11
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          release-name: 'v2.0'
          tag-name: 'v2.0'
          asset-name: 'api.jar'
          file: 'java-api/target/api.jar'

      - name: Check whether Seeker is enabled
        id: seeker-check
        shell: bash
        run: |
          if [ "${{ vars.SEEKER_SCAN_REQUIRED }}" == 'true' ]; then
            echo "enabled=true" >> $GITHUB_OUTPUT;
          else
            echo "enabled=false" >> $GITHUB_OUTPUT;
          fi

      - name: Add Seeker Agent
        run: |
          sh -c "$( curl -k -X GET -fsSL --header 'Accept: application/x-sh' 'https://testing.seeker.synopsys.com/rest/api/latest/installers/agents/scripts/JAVA?osFamily=LINUX&downloadWith=curl&projectKey='$SEEKER_PROJECT_KEY'&webServer=OTHER&flavor=DEFAULT&agentName=&accessToken=')"
          echo "JAVA_TOOL_OPTIONS=-javaagent:./seeker/seeker-agent.jar" >> $GITHUB_ENV

      - name: Add Java agent
        if: ${{ steps.seeker-check.outputs.enabled == 'true' }}
        shell: bash
        run: |
          echo "JAVA_TOOL_OPTIONS=-javaagent:`pwd`/seeker/seeker-agent.jar" >> $GITHUB_ENV

      - name: Start HippoTech App for Testing
        working-directory: ./java-api
        run: ./start.sh

      - name: Run Automated Acceptance Tests
        working-directory: ./jest
        run: npm install && npm test

      - name: Shut Down HippoTech App
        working-directory: ./java-api
        run: ./stop.sh

      - name: Generate Seeker Reports
        run: |
          curl -s -X 'GET' \
          $SEEKER_SERVER_URL'/rest/api/latest/vulnerabilities?format=JSON&language=en&projectKeys='$SEEKER_PROJECT_KEY'&statuses=DETECTED&minSeverity=HIGH' \
            -H 'accept: text/plain' \
            -H "Authorization: ${{ secrets.SEEKER_API_TOKEN }}" \
            -H 'RequestSource: swagger' | jq 'map(.ItemKey + .VulnerabilityName + " URL: " + .SeekerServerLink)'
      
      - name: Publish Seeker Reports
        uses: actions/upload-artifact@v3
        with:
          name: Seeker Compliance Reports
          path: |
            compliance-report.pdf

      - name: Seeker Compliance Check
        run: |
          COMPLIANCE=`curl -s -X 'GET' \
            $SEEKER_SERVER_URL'/rest/api/latest/projects/'$SEEKER_PROJECT_KEY'/status' \
            -H 'accept: application/json' \
            -H "Authorization: ${{ secrets.SEEKER_API_TOKEN }}" \
            -H 'RequestSource: swagger'` | jq '.projectStatus.compliant'
          if [ "$COMPLIANCE" = "true" ]; then
            echo "Seeker Compliance Check Passed"
          else
            if [ "$SEEKER_COMPLIANCE_FAIL_BUILD" = "true" ]; then
              echo "::error ::Seeker compliance check failed." && exit 1
            else
              echo "::warning ::Seeker compliance check failed."
            fi
          fi
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: '**/results/*.xml'
          check_name: "test"
